---
# {{ansible_managed}}
{% for site in remap | sort %}{% if remap[site]["network"] == item.key %}
{% if (remap[site]['banjax_path'] is defined and remap[site]['banjax_path'] != '') or
      (remap[site]['banjax_sha_inv'] is defined and remap[site]['banjax_sha_inv']) or
      (remap[site]['user_banjax_sha_inv'] is defined and remap[site]['user_banjax_sha_inv']) or
      (remap[site]['banjax_captcha'] is defined and remap[site]['banjax_captcha']) %}
challenger:
  challenges:
{% if remap[site]['banjax_path'] is defined and remap[site]['banjax_path'] != '' %}
    - name: "{{site}}_auth"
      domains:
        - "{{site}}"
        - "www.{{site}}"
{% if "additional_domain_prefix" in remap[site] and remap[site]['additional_domain_prefix'] %}
{% for prefix in remap[site]['additional_domain_prefix'] %}
        - "{{prefix}}.{{site}}"
{% endfor %}
{% endif %}
      challenge_type: "auth"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[site]['origin']}}
{% if "add_banjax_whitelist" in remap[site] and remap[site]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[site]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "auth.html"
      password_hash: "{{remap[site]['banjax_password']}}"
{% if remap[site]['banjax_path'] is not string %}
      magic_word:
{% for word in remap[site]['banjax_path'] %}
       - "{{word}}" 
{% endfor %}
{% elif remap[site]['banjax_path'] is string %}
      magic_word: "{{remap[site]['banjax_path']}}"
{% else %}
      magic_word: [] 
{% endif %}
{% if remap[site]['banjax_path_exceptions'] is defined and remap[site]['banjax_path_exceptions'] is not string and remap[site]['banjax_path_exceptions'] != '' %}
      magic_word_exceptions:
{% for word in remap[site]['banjax_path_exceptions'] %}
       - "{{word}}"
{% endfor %}
{% elif remap[site]['banjax_path_exceptions'] is defined and remap[site]['banjax_path_exceptions'] is string and remap[site]['banjax_path_exceptions'] != '' %}
      magic_word_exceptions:
        - "{{remap[site]['banjax_path_exceptions']}}"
{% else %}
      magic_word_exceptions: [] 
{% endif %}
      validity_period: 360000
      no_of_fails_to_ban: 10
{% endif %}
{% if remap[site]['banjax_sha_inv'] is defined and remap[site]['banjax_sha_inv'] or (remap[site]['user_banjax_sha_inv'] is defined and remap[site]['user_banjax_sha_inv']) %}

    - name: "{{site}}_sha_inv"
      domains:
        - "{{site}}"
        - "www.{{site}}"
{% if "additional_domain_prefix" in remap[site] and remap[site]['additional_domain_prefix'] %}
{% for prefix in remap[site]['additional_domain_prefix'] %}
        - "{{prefix}}.{{site}}"
{% endfor %}
{% endif %}
      challenge_type: "sha_inverse"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[site]['origin']}}
{% if "add_banjax_whitelist" in remap[site] and remap[site]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[site]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "solver.html"
{% if "banjax_sha_inv" in remap[site] and remap[site]['banjax_sha_inv'] %}
      no_of_fails_to_ban: 20
{% else %}
      no_of_fails_to_ban: 0
{% endif %}
      validity_period: 86400
{% endif %}
{% if remap[site]['banjax_captcha'] is defined and remap[site]['banjax_captcha'] %}

    - name: "{{site}}_captcha"
      domains:
        - "{{site}}"
        - "www.{{site}}"
{% if "additional_domain_prefix" in remap[site] and remap[site]['additional_domain_prefix'] %}
{% for prefix in remap[site]['additional_domain_prefix'] %}
        - "{{prefix}}.{{site}}"
{% endfor %}
{% endif %}
      challenge_type: "captcha"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[site]['origin']}}
{% if "add_banjax_whitelist" in remap[site] and remap[site]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[site]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "captcha.html"
      no_of_fails_to_ban: 20
      validity_period: 86400
{% endif %}
{% endif %}
{% if remap[site]['banjax_regex_banner'] is defined %}

regex_banner:
{%for rb in remap[site]['banjax_regex_banner'] %}
  - rule: '{{site}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ {{site | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}

  - rule: 'www.{{site}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ www\.{{site | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}
{% if "additional_domain_prefix" in remap[site] and remap[site]['additional_domain_prefix'] %}
{% for prefix in remap[site]['additional_domain_prefix'] %}

  - rule: '{{prefix}}.{{site}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ {{prefix}}\.{{site | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}
{% endfor %}
{% endif %}

{% endfor -%}
{%- endif -%}

{% if remap[site].global_origin_whitelist is defined and remap[site].global_origin_whitelist == True %}
# origin whitelist
white_lister:
  white_listed_ips:
    - {{remap[site]['origin']}}
{% endif %}

# include config/banjax.d/{{site}}.bconf
{% include "config/banjax.d/" + site + ".bconf" ignore missing %}

{% endif %}
{% endfor %}
