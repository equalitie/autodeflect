-- {{ansible_managed}}
-- chi = client ip
-- caun = user name
-- cqtn = client request timestamp
-- cqhm = HTTP method
-- cqup = Path component from the remapped client request
-- cqhv = HTTP version
-- cqus = URL scheme
-- cqh = named header from the client's request
-- pssc = HTTP response status code sent by Traffic Server proxy to the client
-- pscl = Content body length of the Traffic Server proxy response
-- crc = Cache Result Code
-- psct = Content type of the document
-- pqsn = Host name from which Traffic Server issues the proxy request to the origin server
-- ttms = Time in milliseconds spent by Traffic Server processing the entire client request
-- cquc = Canonical URL from the client request to Traffic Server
{% set delete_sites %}
{% set comma = joiner(",") %}
{% for site, attributes in remap | dictsort %}{% if attributes["disable_logging"] and (attributes["network"] == item.key) %}
{{ comma() }}{{site}},www.{{site}}{% endif %}{% endfor %}
{% endset %}

deflect_log = format {
  Format = '%<chi> %<caun> [%<cqtn>] \"%<cqhm> /%<cqup> %<cqhv>\" %<cqus> %<{Host}cqh> %<pssc> %<pscl> \"%<{User-Agent}cqh>\" %<crc> %<psct> %<pqsn> %<ttms> %<cquc> \"%<{Referer}cqh>\" \"%<{X-Forwarded-For}cqh>\"'
}

{% if delete_sites|length() > 0 %}
-- delete logging filters, note: www. is added to all sites here also.

reject_delete = filter.reject('%<{Host}cqh> CASE_INSENSITIVE_MATCH {{delete_sites}}')

accept_delete = filter.accept('%<{Host}cqh> CASE_INSENSITIVE_MATCH {{delete_sites}}')

log.ascii {
  Filename = 'delete.log',
  Format = deflect_log,
  Filters = { accept_delete },
  RollingEnabled = 1,
  RollingIntervalSec = 86400,
  RollingOffsetHr = 0
}

log.ascii {
  Filename = 'deflect.log',
  Format = deflect_log,
  Filters = { reject_delete },
  RollingEnabled = 1,
  RollingIntervalSec = 86400,
  RollingOffsetHr = 0
}
{% else %}
-- no delete logging filtering for this dnet

log.ascii {
  Filename = 'deflect.log',
  Format = deflect_log,
  RollingEnabled = 1,
  RollingIntervalSec = 86400,
  RollingOffsetHr = 0
}
{% endif %}
