---
{% if (remap[item.key]['banjax_path'] is defined and remap[item.key]['banjax_path'] != '') or
      (remap[item.key]['banjax_sha_inv'] is defined and remap[item.key]['banjax_sha_inv']) or
      (remap[item.key]['user_banjax_sha_inv'] is defined and remap[item.key]['user_banjax_sha_inv']) or
      (remap[item.key]['banjax_captcha'] is defined and remap[item.key]['banjax_captcha']) %}
challenger:
  challenges:
{% if remap[item.key]['banjax_path'] is defined and remap[item.key]['banjax_path'] != '' %}
    - name: "{{item.key}}_auth"
      domains:
       - "{{item.key}}"
       - "www.{{item.key}}"
{% if "additional_domain_prefix" in remap[item.key] and remap[item.key]['additional_domain_prefix'] %}
{% for prefix in remap[item.key]['additional_domain_prefix'] %}
       - "{{prefix}}.{{item.key}}"
{% endfor %}
{% endif %}
      challenge_type: "auth"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[item.key]['origin']}}
{% if "add_banjax_whitelist" in remap[item.key] and remap[item.key]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[item.key]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "auth.html"
      password_hash: "{{remap[item.key]['banjax_password']}}"
{% if remap[item.key]['banjax_path'] is not string %}
      magic_word:
{% for word in remap[item.key]['banjax_path'] %}
       - "{{word}}" 
{% endfor %}
{% elif remap[item.key]['banjax_path'] is string %}
      magic_word: "{{remap[item.key]['banjax_path']}}"
{% else %}
      magic_word: [] 
{% endif %}
{% if remap[item.key]['banjax_path_exceptions'] is defined and remap[item.key]['banjax_path_exceptions'] is not string and remap[item.key]['banjax_path_exceptions'] != '' %}
      magic_word_exceptions:
{% for word in remap[item.key]['banjax_path_exceptions'] %}
       - "{{word}}"
{% endfor %}
{% elif remap[item.key]['banjax_path_exceptions'] is defined and remap[item.key]['banjax_path_exceptions'] is string and remap[item.key]['banjax_path_exceptions'] != '' %}
      magic_word_exceptions:
       - "{{remap[item.key]['banjax_path_exceptions']}}"
{% else %}
      magic_word_exceptions: [] 
{% endif %}
      validity_period: 360000
      no_of_fails_to_ban: 10
{% endif %}
{% if (remap[item.key]['banjax_sha_inv'] is defined and remap[item.key]['banjax_sha_inv']) or (remap[item.key]['user_banjax_sha_inv'] is defined and remap[item.key]['user_banjax_sha_inv']) %}

    - name: "{{item.key}}_sha_inv"
      domains:
       - "{{item.key}}"
       - "www.{{item.key}}"
{% if "additional_domain_prefix" in remap[item.key] and remap[item.key]['additional_domain_prefix'] %}
{% for prefix in remap[item.key]['additional_domain_prefix'] %}
       - "{{prefix}}.{{item.key}}"
{% endfor %}
{% endif %}
      challenge_type: "sha_inverse"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[item.key]['origin']}}
{% if "add_banjax_whitelist" in remap[item.key] and remap[item.key]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[item.key]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "solver.html"
{% if "banjax_sha_inv" in remap[item.key] and remap[item.key]['banjax_sha_inv'] %}
      no_of_fails_to_ban: 20
{% else %}  # 0 here means don't remember failures (and don't report to swabber)
      no_of_fails_to_ban: 0
{% endif %}
      validity_period: 86400
{% endif %}
{% if remap[item.key]['banjax_captcha'] is defined and remap[item.key]['banjax_captcha'] %}

    - name: "{{item.key}}_captcha"
      domains:
       - "{{item.key}}"
       - "www.{{item.key}}"
{% if "additional_domain_prefix" in remap[item.key] and remap[item.key]['additional_domain_prefix'] %}
{% for prefix in remap[item.key]['additional_domain_prefix'] %}
       - "{{prefix}}.{{item.key}}"
{% endfor %}
{% endif %}
      challenge_type: "captcha"
      white_listed_ips:
        - 127.0.0.1
        - {{remap[item.key]['origin']}}
{% if "add_banjax_whitelist" in remap[item.key] and remap[item.key]['add_banjax_whitelist'] %}
{% for whitelist_ip in remap[item.key]['add_banjax_whitelist'] %}
        - {{whitelist_ip}}
{% endfor %}
{% endif %}
      challenge: "captcha.html"
      no_of_fails_to_ban: 20
      validity_period: 86400
{% endif %}
{% endif %}
{% if remap[item.key]['banjax_regex_banner'] is defined %}

regex_banner:
{%for rb in remap[item.key]['banjax_regex_banner'] %}
  - rule: '{{item.key}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ {{item.key | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}

  - rule: 'www.{{item.key}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ www\.{{item.key | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}
{% if "additional_domain_prefix" in remap[item.key] and remap[item.key]['additional_domain_prefix'] %}
{% for prefix in remap[item.key]['additional_domain_prefix'] %}

  - rule: '{{prefix}}.{{item.key}} m={{rb.regex.method}} p={{rb.regex.url}} u={{rb.regex.ua}} {{rb.hits_per_interval}}req/{{rb.interval}}sec'
    regex: '^{{rb.regex.method}}\ https?:\/\/{{rb.regex.url}}\ {{prefix}}\.{{item.key | regex_replace('\.', '\\.')}}\ {{rb.regex.ua}}'
    interval: {{rb.interval}}
    hits_per_interval: {{rb.hits_per_interval}}
{% endfor %}
{% endif %}

{% endfor -%}
{%- endif -%}

# origin whitelist
white_lister:
  white_listed_ips:
    - {{remap[item.key]['origin']}}

# include config/banjax.d/{{item.key}}.bconf
{% include "config/banjax.d/" + item.key + ".bconf" ignore missing %}
